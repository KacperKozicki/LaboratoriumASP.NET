// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231120201446_GenreEntityDone")]
    partial class GenreEntityDone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Data.Entities.AlbumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BandOrArtist")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<int>("ChartRanking")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("release_date");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BandOrArtist = "Artist1",
                            ChartRanking = 1,
                            Created = new DateTime(2023, 11, 20, 21, 14, 46, 472, DateTimeKind.Local).AddTicks(3801),
                            GenreId = 1,
                            Name = "Album1",
                            ReleaseDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BandOrArtist = "Artist2",
                            ChartRanking = 3,
                            Created = new DateTime(2023, 11, 20, 21, 14, 46, 472, DateTimeKind.Local).AddTicks(3827),
                            GenreId = 2,
                            Name = "Album2",
                            ReleaseDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Data.Entities.ContactEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Birth")
                        .HasColumnType("TEXT")
                        .HasColumnName("birth_date");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2023, 11, 20, 21, 14, 46, 470, DateTimeKind.Local).AddTicks(552),
                            Email = "adam@wsei.edu.pl",
                            Name = "Adam",
                            OrganizationId = 1,
                            Phone = "127813268163",
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            Birth = new DateTime(1999, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2023, 11, 20, 21, 14, 46, 470, DateTimeKind.Local).AddTicks(599),
                            Email = "ewa@wsei.edu.pl",
                            Name = "Ewa",
                            OrganizationId = 1,
                            Phone = "293443823478",
                            Priority = 2
                        });
                });

            modelBuilder.Entity("Data.Entities.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem",
                            Name = "RockAndRoll"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem",
                            Name = "Jezz"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem",
                            Name = "Clasic"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem",
                            Name = "Pop"
                        });
                });

            modelBuilder.Entity("Data.Entities.OrganizationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Uczelnia",
                            Name = "WSEI"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Uczelnia",
                            Name = "UJ"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Uczelnia",
                            Name = "AGH"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Firma",
                            Name = "NOKIA"
                        });
                });

            modelBuilder.Entity("Data.Entities.TrackEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlbumEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumEntityId");

                    b.ToTable("tracks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumEntityId = 1,
                            Name = "Pierwszy utwór"
                        },
                        new
                        {
                            Id = 2,
                            AlbumEntityId = 1,
                            Name = "Drugi utwór"
                        },
                        new
                        {
                            Id = 3,
                            AlbumEntityId = 1,
                            Name = "Trzeci utwór"
                        },
                        new
                        {
                            Id = 4,
                            AlbumEntityId = 2,
                            Name = "Pierwszy utwór"
                        },
                        new
                        {
                            Id = 5,
                            AlbumEntityId = 2,
                            Name = "Drugi utwór"
                        },
                        new
                        {
                            Id = 6,
                            AlbumEntityId = 2,
                            Name = "Trzeci utwór"
                        });
                });

            modelBuilder.Entity("Data.Entities.AlbumEntity", b =>
                {
                    b.HasOne("Data.Entities.GenreEntity", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Entities.ContactEntity", b =>
                {
                    b.HasOne("Data.Entities.OrganizationEntity", "Ogranization")
                        .WithMany("Contacts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogranization");
                });

            modelBuilder.Entity("Data.Entities.GenreEntity", b =>
                {
                    b.OwnsOne("Data.Models.History", "History", b1 =>
                        {
                            b1.Property<int>("GenreEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Founder")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("YearOfOrigin")
                                .HasColumnType("INTEGER");

                            b1.HasKey("GenreEntityId");

                            b1.ToTable("genres");

                            b1.WithOwner()
                                .HasForeignKey("GenreEntityId");

                            b1.HasData(
                                new
                                {
                                    GenreEntityId = 1,
                                    Country = "USA",
                                    Founder = "Alan Freed",
                                    YearOfOrigin = 1951
                                },
                                new
                                {
                                    GenreEntityId = 2,
                                    Country = "USA",
                                    Founder = "Ray Charles",
                                    YearOfOrigin = 1951
                                },
                                new
                                {
                                    GenreEntityId = 3,
                                    Country = "Germany",
                                    Founder = "Johann Sebastian Bach",
                                    YearOfOrigin = 1750
                                },
                                new
                                {
                                    GenreEntityId = 4,
                                    Country = "USA",
                                    Founder = "Michael Joseph Jackson",
                                    YearOfOrigin = 1960
                                });
                        });

                    b.Navigation("History")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.OrganizationEntity", b =>
                {
                    b.OwnsOne("Data.Models.Address", "Adress", b1 =>
                        {
                            b1.Property<int>("OrganizationEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("OrganizationEntityId");

                            b1.ToTable("organizations");

                            b1.WithOwner()
                                .HasForeignKey("OrganizationEntityId");

                            b1.HasData(
                                new
                                {
                                    OrganizationEntityId = 1,
                                    City = "Kraków",
                                    PostalCode = "31-150",
                                    Street = "Św. Filipa 17"
                                },
                                new
                                {
                                    OrganizationEntityId = 2,
                                    City = "Kraków",
                                    PostalCode = "31-007",
                                    Street = "Gołębia 24"
                                },
                                new
                                {
                                    OrganizationEntityId = 3,
                                    City = "Kraków",
                                    PostalCode = "31-059",
                                    Street = "al. Adama Mickiewicza 30"
                                },
                                new
                                {
                                    OrganizationEntityId = 4,
                                    City = "Kraków",
                                    PostalCode = "31-348",
                                    Street = "Michała Bobrzyńskiego 46"
                                });
                        });

                    b.Navigation("Adress")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.TrackEntity", b =>
                {
                    b.HasOne("Data.Entities.AlbumEntity", "Album")
                        .WithMany("Tracklist")
                        .HasForeignKey("AlbumEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Data.Entities.AlbumEntity", b =>
                {
                    b.Navigation("Tracklist");
                });

            modelBuilder.Entity("Data.Entities.GenreEntity", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Data.Entities.OrganizationEntity", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
